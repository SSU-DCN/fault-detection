---
- name: set master and worker facts
  set_fact:
    workers:
      instance1: worker1
      # instance2: worker2
    services:
      service1: kube-controller-manager
      service2: kube-scheduler
      service3: admin 
    address:
      # EXTERNAL_IP
      # INTERNAL_IP
      worker1_address: 192.168.10.13
      KUBERNETES_PUBLIC_ADDRESS: 192.168.10.96 # ip of the master node

# The kubelet Kubernetes Configuration File
- name: Generate a kubeconfig file for each worker node
  shell: |
    kubectl config set-cluster kubernetes-the-hard-way --certificate-authority=ca.pem --embed-certs=true --server=https://{{ address.KUBERNETES_PUBLIC_ADDRESS }}:6443 --kubeconfig={{ item.value }}.kubeconfig
    kubectl config set-credentials system:node:{{ item.value }} --client-certificate={{ item.value }}.pem --client-key={{ item.value }}-key.pem --embed-certs=true --kubeconfig={{ item.value }}.kubeconfig
    kubectl config set-context default --cluster=kubernetes-the-hard-way --user=system:node:{{ item.value }} --kubeconfig={{ item.value }}.kubeconfig
    kubectl config use-context default --kubeconfig={{ item.value }}.kubeconfig
  with_dict: "{{ workers }}"

# The kube-proxy Kubernetes Configuration File
- name: Generate a kubeconfig file for the kube-proxy service
  shell: |
    kubectl config set-cluster kubernetes-the-hard-way --certificate-authority=ca.pem --embed-certs=true --server=https://{{ address.KUBERNETES_PUBLIC_ADDRESS }}:6443 --kubeconfig=kube-proxy.kubeconfig
    kubectl config set-credentials system:kube-proxy --client-certificate=kube-proxy.pem --client-key=kube-proxy-key.pem --embed-certs=true --kubeconfig=kube-proxy.kubeconfig
    kubectl config set-context default --cluster=kubernetes-the-hard-way --user=system:kube-proxy --kubeconfig=kube-proxy.kubeconfig
    kubectl config use-context default --kubeconfig=kube-proxy.kubeconfig

# The kube-controller-manager Kubernetes Configuration File
# The kube-scheduler Kubernetes Configuration File
# The admin Kubernetes Configuration File
- name: Generate a kubeconfig file for the kube-controller-manager service
  shell: |
    kubectl config set-cluster kubernetes-the-hard-way --certificate-authority=ca.pem --embed-certs=true --server=https://127.0.0.1:6443 --kubeconfig={{ item.value }}.kubeconfig
    kubectl config set-credentials system:{{ item.value }} --client-certificate={{ item.value }}.pem --client-key={{ item.value }}-key.pem --embed-certs=true --kubeconfig={{ item.value }}.kubeconfig
    kubectl config set-context default --cluster=kubernetes-the-hard-way --user=system:{{ item.value }} --kubeconfig={{ item.value }}.kubeconfig
    kubectl config use-context default --kubeconfig={{ item.value }}.kubeconfig
  with_dict: "{{ services }}"

- name: Transfer kubelet and kube-proxy kubeconfig files to each worker
  command: scp ca.pem {{ item.value }}.kubeconfig kube-proxy.kubeconfig dcn@{{ address.worker1_address }}:~/
  with_dict: "{{ workers }}"

