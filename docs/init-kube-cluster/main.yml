---
- name: inital
  hosts: all
  become: yes
  tasks:
    - include: tasks/inital.yml

- name: set DNS name-server
  hosts: all
  #any_errors_fatal: true
  become: yes
  pre_tasks:
    - name: Find mac-address
      shell: ifconfig ens3 | grep ether
      register: ens3_mac_address
    - debug:
        msg: MAC is {{ ens3_mac_address.stdout.split()[1] }} 
      tags:
        - debugsha
  roles:
    - role: ansible-netplan
      become: yes
      # This role will do nothing unless netplan_enabled is true.
      netplan_enabled: true
      # The default is /etc/netplan/config.yaml.
      netplan_config_file: /etc/netplan/50-cloud-init.yaml
      # Ubuntu 18.04, for example, defaults to using networkd.
      netplan_renderer: networkd
      # Simple network configuration to add a single network
      # interface.
      netplan_configuration:
        network:
          ethernets:
            ens3:
              dhcp4: true
              match:
                macaddress: "{{ ens3_mac_address.stdout.split()[1] }}"
              set-name: ens3
              nameservers:
                addresses:
                - 8.8.8.8

- name: install kube-dependencies 
  hosts: all
  become: yes
  tasks:
    - include: tasks/kube-dependencies.yml
      vars: 
        kubelet_version: 1.18.0-00
        kubeadm_version: 1.18.0-00

- name: initalize-cluster
  hosts: master
  become: yes
  tasks:
    - include: tasks/initalize-cluster.yml
      vars: 
        kubectl_version: 1.18.0-00
        pod_network_cidr: 10.244.0.0/16

- hosts: master
  become: yes
  gather_facts: false
  tasks:
    - name: get join command
      shell: kubeadm token create --print-join-command
      register: join_command_raw

    - name: set join command
      set_fact:
        join_command: "{{ join_command_raw.stdout_lines[0] }}"


- hosts: workers
  become: yes
  tasks:
    - name: join cluster
      shell: "{{ hostvars['master'].join_command }} >> node_joined.txt"
      args:
        chdir: $HOME
        creates: node_joined.txt

  